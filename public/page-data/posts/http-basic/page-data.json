{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/http-basic","result":{"data":{"markdownRemark":{"html":"<p>HTTPプロトコルについてなんとなく分かってもらうためのメモ</p>\n<h2>目的</h2>\n<ul>\n<li>HTTPについて(その辺の新人研修よりは)詳しく知ってもらう</li>\n</ul>\n<h2>HTTPとは</h2>\n<ul>\n<li>\n<p>\"Hypertext Transfer Protocol\"<br>\n\"すごい文書\"を転送するための規約(直訳)</p>\n</li>\n<li>\n<p>リクエスト-レスポンス型プロトコル<br>\nクライアントからサーバに向けてリクエストを送付し、サーバがクライアントにレスポンスを返す</p>\n</li>\n<li>\n<p>テキストベースで情報をやり取り</p>\n</li>\n<li>\n<p>当初は文書をやり取りするためのプロトコルだったが、現在では画像や動画をはじめとしたさまざまなデータのやり取りに利用される</p>\n</li>\n</ul>\n<h2>バージョン</h2>\n<ul>\n<li>HTTP/0.9, 1.0<br>\n現在は使われていない</li>\n<li>HTTP/1.1<br>\n現在主流のバージョン</li>\n<li>HTTP/2<br>\n後方互換性を維持したまま高速化</li>\n<li>HTTP/3<br>\n後方互換性を維持したまま高速化</li>\n</ul>\n<p>HTTP/2,3は高速化がメインなので、機能としてはHTTP/1.1をわかっていれば問題ない</p>\n<h2>HTTPリクエストの中身</h2>\n<h3><code class=\"language-text\">http://hoge.jp/fuga</code>にリクエストを投げる例</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">POST /fuga HTTP/1.1\r\nHost: hoge.jp\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0~略\r\nContent-Type: application/json; charset=utf-8\r\n\r\n{\r\n    \"name\": \"太郎\",\r\n    \"race\": \"dog\"\r\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>↑のようなテキストデータがサーバに送信される</p>\n<ul>\n<li>1行目：リクエストライン<br>\n左からHTTPメソッド、URI、使用するHTTPのバージョン</li>\n<li>2行目以降から空行まで：リクエストヘッダ</li>\n<li>空行以降: リクエストボディ</li>\n</ul>\n<h2>HTTPメソッド</h2>\n<ul>\n<li>そのリクエストがサーバ上のリソースに対し何をしたいかを意思表示するためのもの</li>\n</ul>\n<h2>メソッド一覧</h2>\n<ul>\n<li>GET<br>\nリソースの参照</li>\n<li>POST<br>\nリソースの登録/更新</li>\n<li>PUT<br>\nリソースの登録/入れ替え</li>\n<li>DELETE<br>\nリソースの削除</li>\n<li>その他<br>\nHEAD, OPTIONS, TRACE, CONNECT</li>\n</ul>\n<h2>現実で使われているメソッドはほぼGET/POSTのみ</h2>\n<ul>\n<li>参照はGET、サーバ上のリソースに変更を加える場合はPOST\r\n-> REST</li>\n<li>HTTPの規約に厳密に従って実装されたもの\r\n-> RESTful</li>\n</ul>\n<p>※めんどくさい、トランザクションの関係上使い分けができないなどの理由でRESTfulな実装はあんまりないはず</p>\n<h2>GET</h2>\n<ul>\n<li>サーバ上のリソースを参照する場合のメソッド</li>\n<li>リクエストにボディ部を持たない</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">GET /fuga HTTP/1.1\r\nHost: hoge.jp\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0~略</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>パラメータを渡す場合は、URIに埋め込む</li>\n</ul>\n<p>name=太郎、race=dogのパラメータを渡す場合</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">GET /fuga?name=太郎&amp;race=dog HTTP/1.1\r\nHost: hoge.jp\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0~略</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>POST</h2>\n<ul>\n<li>サーバ上のリソースに変更を加える場合のメソッド</li>\n<li>パラメータを渡す場合はボディに埋め込む</li>\n<li>リクエストボディの形式はContent-Typeヘッダで宣言する</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">POST /fuga HTTP/1.1\r\nHost: hoge.jp\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0~略\r\nContent-Type: application/json; charset=utf-8\r\n\r\n{\r\n    \"name\": \"太郎\",\r\n    \"race\": \"dog\"\r\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>HTTPレスポンス</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nConnection: close\r\n\r\n&lt;html>\r\n    &lt;body>Hello World&lt;/body>\r\n&lt;/html></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>1行目：ステータスライン<br>\n左からプロトコルバージョン、ステータスコード、メッセージが入る</li>\n<li>2行目以降から空行まで：レスポンスヘッダ</li>\n<li>空行以降: レスポンスボディ</li>\n</ul>\n<p>MEMO: リクエストボディの形式はContent-Typeヘッダで宣言する</p>\n<h1>ステータスコード</h1>\n<p>ステータスコードは100~500番台の数値で、3桁目毎に分類わけされている</p>\n<table>\n<thead>\n<tr>\n<th>コード</th>\n<th>意味</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>100番台</td>\n<td>情報を返す</td>\n</tr>\n<tr>\n<td>200番台</td>\n<td>リクエストに成功</td>\n</tr>\n<tr>\n<td>300番台</td>\n<td>追加の処理が必要</td>\n</tr>\n<tr>\n<td>400番台</td>\n<td>クライアントエラー</td>\n</tr>\n<tr>\n<td>500番台</td>\n<td>サーバエラー</td>\n</tr>\n</tbody>\n</table>\n<p>詳細はこちら\r\n<a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Status\">https://developer.mozilla.org/ja/docs/Web/HTTP/Status</a></p>\n<h1>知っておきたいリクエストヘッダー</h1>\n<ul>\n<li>Cookie</li>\n<li>Content-Type</li>\n</ul>\n<h1>Cookie</h1>\n<blockquote>\n<p>RFC 6265などで定義されたHTTPにおけるウェブサーバとウェブブラウザ間で状態を管理する通信プロトコル、またそこで用いられるウェブブラウザに保存された情報のことを指す。</p>\n</blockquote>\n<p>書き途中</p>","excerpt":"HTTPプロトコルについてなんとなく分かってもらうためのメモ 目的 HTTPについて(その辺の新人研修よりは)詳しく知ってもらう HTTPとは \"Hypertext Transfer Protocol…","frontmatter":{"title":"HTTPの基礎","description":"HTTPの基礎","slug":"http-basic","date":"2021/07/07"}},"site":{"siteMetadata":{"siteUrl":"http://localhost:8080"}}},"pageContext":{"slug":"http-basic"}},"staticQueryHashes":["1569944845","1605050851","18536520","2810796485","3917665935"]}